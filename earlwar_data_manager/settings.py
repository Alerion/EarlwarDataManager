'''
Django settings for earlwar_data_manager project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
'''
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$gs@qba&9l&jp2-n&0v!h+n=y%4%cz_#d@dgcj0g4=+za(@kmn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap4',
    'django_jsonforms',
    'main'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'earlwar_data_manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'earlwar_data_manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


FIELDS = {'Units': [
    {'field': 'Id', 'title': 'Id'},
    {'field': 'Name', 'title': 'Name'},
    {'field': 'MaxHealth', 'title': 'Max Health', 'sortable': True},
    {'field': 'AttackType', 'title': 'Attack Type'},
    {'field': 'DamageMin', 'title': 'Damage Min', 'sortable': True},
    {'field': 'DamageMax', 'title': 'Damage Max', 'sortable': True},
], 'Abilities': [
    {'field': 'Id', 'title': 'Id'},
    {'field': 'Name', 'title': 'Name'},
    {'field': 'Class', 'title': 'Class'},
    {'field': 'MaxLevel', 'title': 'MaxLevel', 'sortable': True},
    {'field': 'AbilityUnitTargetTeam', 'title': 'AbilityUnitTargetTeam', 'sortable': True},
    {'field': 'AbilityDamageType', 'title': 'AbilityDamageType', 'sortable': True},
], 'ItemModifiers': [
    {'field': 'Type', 'title': 'Type'},
    {'field': 'Domain', 'title': 'Domain'},
    {'field': 'Modifiers', 'title': 'Modifiers'}
]}

TYPES = {
    'Units': 'UnitData.json',
    'Abilities': 'AbilityData.json',
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR)

STATICFILES_DIRS = []
STATIC_URL = '/static/'

# defined in local settings
RESOURCES_DATA_PATH = ""

try:
    from .local_settings import *
except ImportError:
    pass

JSON_SCHEMAS_PATH = os.path.join(RESOURCES_DATA_PATH, "JSONSchemas")

if JSON_SCHEMAS_PATH:
    STATICFILES_DIRS += [JSON_SCHEMAS_PATH]
